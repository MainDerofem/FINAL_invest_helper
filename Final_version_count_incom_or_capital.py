# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Final_version_count_incom_or_capital.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Inc_or_cap(object):
    def setupUi(self, Inc_or_cap):
        Inc_or_cap.setObjectName("Inc_or_cap")
        Inc_or_cap.resize(830, 500)
        Inc_or_cap.setMinimumSize(QtCore.QSize(830, 500))
        Inc_or_cap.setMaximumSize(QtCore.QSize(830, 500))
        Inc_or_cap.setStyleSheet("QWidget#centralwidget{\n"
"background-color: qlineargradient(spread:pad, x1:0.068, y1:0.153409, x2:0.565, y2:0.482182, stop:0 rgba(88, 255, 127, 255), stop:1 rgba(103, 144, 255, 255));}")
        self.centralwidget = QtWidgets.QWidget(Inc_or_cap)
        self.centralwidget.setObjectName("centralwidget")
        self.btn_count_capital_1 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_count_capital_1.setGeometry(QtCore.QRect(30, 290, 765, 80))
        self.btn_count_capital_1.setMinimumSize(QtCore.QSize(765, 80))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.btn_count_capital_1.setFont(font)
        self.btn_count_capital_1.setStyleSheet("border-radius:20px;\n"
"background-color: rgb(195, 255, 116);")
        self.btn_count_capital_1.setObjectName("btn_count_capital_1")
        self.btn_count_income_1 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_count_income_1.setGeometry(QtCore.QRect(30, 390, 765, 80))
        self.btn_count_income_1.setMinimumSize(QtCore.QSize(765, 80))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.btn_count_income_1.setFont(font)
        self.btn_count_income_1.setStyleSheet("border-radius:20px;\n"
"background-color: rgb(195, 255, 116);")
        self.btn_count_income_1.setObjectName("btn_count_income_1")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 9, 831, 271))
        self.label.setStyleSheet("color: rgb(170, 255, 255);")
        self.label.setObjectName("label")
        self.btn_back_1 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_back_1.setGeometry(QtCore.QRect(750, 470, 75, 23))
        self.btn_back_1.setStyleSheet("background-color: rgb(143, 54, 36);\n"
"color: rgb(255, 255, 255);")
        self.btn_back_1.setObjectName("btn_back_1")
        Inc_or_cap.setCentralWidget(self.centralwidget)

        self.retranslateUi(Inc_or_cap)
        QtCore.QMetaObject.connectSlotsByName(Inc_or_cap)

    def retranslateUi(self, Inc_or_cap):
        _translate = QtCore.QCoreApplication.translate
        Inc_or_cap.setWindowTitle(_translate("Inc_or_cap", "Капитал или пассивный доход"))
        self.btn_count_capital_1.setText(_translate("Inc_or_cap", "Рассчитать капитал."))
        self.btn_count_income_1.setText(_translate("Inc_or_cap", "Рассчитать пассивный доход."))
        self.label.setText(_translate("Inc_or_cap", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt;\">Здесь вы можете рассчитать размер своего капитала или размер пассивного дохода (в месяц).</span></p><p align=\"center\"><span style=\" font-size:12pt;\">Вам необходимо будет указать размер вашего капитала за два последних года (на конец года).</span></p><p align=\"center\"><span style=\" font-size:12pt;\">Помощник рассчитает тенденцию прироста вашего капитала. И сумму капитала\\пассивного дохода</span></p><p align=\"center\"><span style=\" font-size:12pt;\">через указанное вами количество лет.</span></p><p align=\"center\"><span style=\" font-size:12pt;\">(При учете, что тенденция прироста капитала сохранится.)</span></p></body></html>"))
        self.btn_back_1.setText(_translate("Inc_or_cap", "Назад"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Inc_or_cap = QtWidgets.QMainWindow()
    inc_orcap = Ui_Inc_or_cap()
    inc_orcap.setupUi(Inc_or_cap)
    Inc_or_cap.show()
    sys.exit(app.exec_())
